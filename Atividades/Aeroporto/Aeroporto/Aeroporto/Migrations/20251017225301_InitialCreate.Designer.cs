// <auto-generated />
using System;
using SistemaAereo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SistemaAereo.Migrations
{
    [DbContext(typeof(AeroportoContext))]
    [Migration("20251017225301_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Aeroporto.Models.Aeronave", b =>
                {
                    b.Property<int>("AeronaveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AeronaveId"));

                    b.Property<int>("NumeroPoltronas")
                        .HasColumnType("int");

                    b.Property<string>("TipoAeronave")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AeronaveId");

                    b.ToTable("Aeronaves");
                });

            modelBuilder.Entity("Aeroporto.Models.Aeroporto", b =>
                {
                    b.Property<int>("AeroportoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AeroportoId"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CodigoIATA")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AeroportoId");

                    b.HasIndex("CodigoIATA")
                        .IsUnique();

                    b.ToTable("Aeroportos");
                });

            modelBuilder.Entity("Aeroporto.Models.ClientePreferencial", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ClienteId");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("ClientesPreferenciais");
                });

            modelBuilder.Entity("Aeroporto.Models.Escala", b =>
                {
                    b.Property<int>("EscalaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EscalaId"));

                    b.Property<int>("AeroportoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("HorarioChegada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HorarioSaida")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<int>("VooId")
                        .HasColumnType("int");

                    b.HasKey("EscalaId");

                    b.HasIndex("AeroportoId");

                    b.HasIndex("VooId");

                    b.ToTable("Escalas");
                });

            modelBuilder.Entity("Aeroporto.Models.Poltrona", b =>
                {
                    b.Property<int>("PoltronaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PoltronaId"));

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NumeroPoltrona")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("VooId")
                        .HasColumnType("int");

                    b.HasKey("PoltronaId");

                    b.HasIndex("VooId");

                    b.ToTable("Poltronas");
                });

            modelBuilder.Entity("Aeroporto.Models.Voo", b =>
                {
                    b.Property<int>("VooId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VooId"));

                    b.Property<int>("AeronaveId")
                        .HasColumnType("int");

                    b.Property<int>("AeroportoDestinoId")
                        .HasColumnType("int");

                    b.Property<int>("AeroportoOrigemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HorarioChegadaPrevisto")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HorarioSaida")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroVoo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("VooId");

                    b.HasIndex("AeronaveId");

                    b.HasIndex("AeroportoDestinoId");

                    b.HasIndex("AeroportoOrigemId");

                    b.HasIndex("NumeroVoo")
                        .IsUnique();

                    b.ToTable("Voos");
                });

            modelBuilder.Entity("Aeroporto.Models.Escala", b =>
                {
                    b.HasOne("Aeroporto.Models.Aeroporto", "Aeroporto")
                        .WithMany("Escalas")
                        .HasForeignKey("AeroportoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aeroporto.Models.Voo", "Voo")
                        .WithMany("Escalas")
                        .HasForeignKey("VooId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aeroporto");

                    b.Navigation("Voo");
                });

            modelBuilder.Entity("Aeroporto.Models.Poltrona", b =>
                {
                    b.HasOne("Aeroporto.Models.Voo", "Voo")
                        .WithMany("Poltronas")
                        .HasForeignKey("VooId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Voo");
                });

            modelBuilder.Entity("Aeroporto.Models.Voo", b =>
                {
                    b.HasOne("Aeroporto.Models.Aeronave", "Aeronave")
                        .WithMany("Voos")
                        .HasForeignKey("AeronaveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aeroporto.Models.Aeroporto", "AeroportoDestino")
                        .WithMany("VoosDestino")
                        .HasForeignKey("AeroportoDestinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Aeroporto.Models.Aeroporto", "AeroportoOrigem")
                        .WithMany("VoosOrigem")
                        .HasForeignKey("AeroportoOrigemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aeronave");

                    b.Navigation("AeroportoDestino");

                    b.Navigation("AeroportoOrigem");
                });

            modelBuilder.Entity("Aeroporto.Models.Aeronave", b =>
                {
                    b.Navigation("Voos");
                });

            modelBuilder.Entity("Aeroporto.Models.Aeroporto", b =>
                {
                    b.Navigation("Escalas");

                    b.Navigation("VoosDestino");

                    b.Navigation("VoosOrigem");
                });

            modelBuilder.Entity("Aeroporto.Models.Voo", b =>
                {
                    b.Navigation("Escalas");

                    b.Navigation("Poltronas");
                });
#pragma warning restore 612, 618
        }
    }
}
